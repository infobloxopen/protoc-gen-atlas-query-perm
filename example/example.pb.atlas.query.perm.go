// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: example/example.proto

package example

import options "github.com/infobloxopen/protoc-gen-atlas-query-perm/options"
import query "github.com/infobloxopen/atlas-app-toolkit/query"
import _ "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.

var ExampleMessagesRequireQueryValidation = map[string]map[string]options.FilteringOption{
	"User": {
		"speciality":           options.FilteringOption{DisableSorting: true, Deny: []string{"GE", "LT", "LE", "EQ", "GT"}, FilterType: "STRING"},
		"last_name":            options.FilteringOption{FilterType: "STRING"},
		"id":                   options.FilteringOption{Deny: []string{"ALL"}, FilterType: "STRING"},
		"first_name":           options.FilteringOption{Deny: []string{"LT", "LE", "EQ", "GT", "GE"}, FilterType: "STRING"},
		"weight":               options.FilteringOption{Deny: []string{"LE"}, FilterType: "NUMBER"},
		"comment":              options.FilteringOption{FilterType: "STRING"},
		"custom_type_string":   options.FilteringOption{FilterType: "STRING"},
		"home_address.country": options.FilteringOption{FilterType: "STRING"},
		"home_address.city":    options.FilteringOption{DisableSorting: true, Deny: []string{"LE", "MATCH", "GT", "GE", "LT"}, FilterType: "STRING"},
	},
	"CustomType": {},
	"Address": {
		"city":    options.FilteringOption{DisableSorting: true, Deny: []string{"MATCH", "GT", "GE", "LT", "LE"}, FilterType: "STRING"},
		"country": options.FilteringOption{FilterType: "STRING"},
	},
	"ListRequest":  {},
	"ReadRequest":  {},
	"UserResponse": {},
}
var ExampleMethodsRequireFilteringValidation = map[string]string{
	"/example.TestService/List": "User",
}
var ExampleMethodsRequireSortingValidation = map[string]string{
	"/example.TestService/List": "User",
	"/example.TestService/Read": "User",
}

func ExampleValidateQuery(f *query.Filtering, p *query.Sorting, methodName string) error {
	perm, ok := ExampleMethodsRequireFilteringValidation[methodName]
	if !ok {
		return nil
	}
	res := options.ValidateFilteringPermissions(f, perm, ExampleMessagesRequireQueryValidation)
	if res != nil {
		return res
	}
	perm, ok = ExampleMethodsRequireSortingValidation[methodName]
	if !ok {
		return nil
	}
	res = options.ValidateSortingPermissions(p, perm, ExampleMessagesRequireQueryValidation)
	if res != nil {
		return res
	}
	return nil
}
